-- SCHEMA: sales

-- DROP SCHEMA IF EXISTS sales ;

CREATE SCHEMA IF NOT EXISTS sales
    AUTHORIZATION postgres;

GRANT ALL ON SCHEMA sales TO postgres;

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA sales
GRANT ALL ON TABLES TO postgres;


-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS sales.customers
(
    customer_id serial NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(100) COLLATE pg_catalog."default",
    address character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
    CONSTRAINT customers_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS sales.order_details
(
    order_detail_id serial NOT NULL,
    order_id integer,
    product_id integer,
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL,
    total_price numeric(10, 2) NOT NULL,
    CONSTRAINT order_details_pkey PRIMARY KEY (order_detail_id)
);

CREATE TABLE IF NOT EXISTS sales.orders
(
    order_id serial NOT NULL,
    customer_id integer,
    order_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    total_amount numeric(10, 2) NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS sales.products
(
    product_id serial NOT NULL,
    product_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    category character varying(50) COLLATE pg_catalog."default",
    price numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

ALTER TABLE IF EXISTS sales.order_details
    ADD CONSTRAINT order_details_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES sales.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS sales.order_details
    ADD CONSTRAINT order_details_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES sales.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS sales.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES sales.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;